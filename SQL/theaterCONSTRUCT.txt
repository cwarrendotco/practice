drop table theater cascade constraints;
create table theater (
	theaterid INT,
	theatername VARCHAR(15) not null,
	theaterphone VARCHAR(12) not null,
	theateraddress INT not null,
	theaterstreet VARCHAR(25) not null,
	theaterstate VARCHAR(2) not null,
	theaterzip INT not null,
	theateropen VARCHAR(8) not null,
	theaterclose VARCHAR(8) not null,
	theaterscreens INT not null,
	primary key (theaterid)
);

drop table screen cascade constraints; 
create table screen (
	screenid INT,
	screenoccupancy INT not null,
	screensize INT not null,
	theaterid INT,
	primary key (screenid),
	foreign key (theaterid) references theater (theaterid)
);

drop table movie cascade constraints;
create table movie (
	movieid VARCHAR(11),
	movietitle VARCHAR(100) not null,
	movielength INT not null,
	moviegenre VARCHAR(50) not null,
	moviedirectorfname VARCHAR(25) not null,
	moviedirectorlname VARCHAR(25) not null,
	moviestudio VARCHAR(50) not null,
	moviestartdate DATE not null,
	movieenddate DATE not null,
	primary key (movieid)
);

drop table showing cascade constraints;
create table showing (
	showingid INT,
	movieid VARCHAR(11),
	screenid INT,
	showingtimestart VARCHAR(8) not null,
	showingtimeend VARCHAR(8) not null,
	showingdate DATE not null,
	primary key (showingid),
	foreign key (movieid) references movie (movieid),
	foreign key (screenid) references screen (screenid)
);

drop table ticket cascade constraints;
create table ticket (
	ticketid INT,
	showingid INT,
	ticketcost DECIMAL(4) not null,
	ticketdiscount DECIMAL(4),
	ticketrewardcardnum INT,
	primary key (ticketid),
	foreign key (showingid) references showing (showingid)
);

drop table employee cascade constraints;
create table employee (
	employeeid INT,
	employeefname VARCHAR(25) not null,
	employeelname VARCHAR(25) not null,
	employeerole VARCHAR(25) not null,
	employeephone VARCHAR(12) not null,
	employeepay DECIMAL(4) not null,
	employeeemail VARCHAR(50) not null,
	primary key (employeeid)
);